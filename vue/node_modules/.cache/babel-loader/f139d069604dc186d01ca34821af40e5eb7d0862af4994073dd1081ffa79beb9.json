{"ast":null,"code":"export default {\n  name: \"CommentComponent\",\n  props: {\n    fid: null,\n    module: null\n  },\n  data() {\n    return {\n      commentCount: 0,\n      commentContent: '',\n      commentList: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  created() {\n    this.loadComment();\n  },\n  methods: {\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/comment/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.loadComment();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleShowReplyInput(item) {\n      this.$set(item, 'showReplyInput', !item.showReplyInput);\n    },\n    addReplay(item) {\n      this.$request.post('/comment/add', {\n        pid: item.id,\n        rootId: item.rootId,\n        content: item.replyContent,\n        fid: this.fid,\n        module: this.module\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('操作成功');\n          item.replyContent = '';\n          this.loadComment(); // 重新加载数据\n        }\n      });\n    },\n\n    loadComment() {\n      this.$request.get('/comment/selectForUser', {\n        params: {\n          fid: this.fid,\n          module: this.module\n        }\n      }).then(res => {\n        this.commentList = res.data || [];\n      });\n      this.$request.get('/comment/selectCount', {\n        params: {\n          fid: this.fid,\n          module: this.module\n        }\n      }).then(res => {\n        this.commentCount = res.data || 0;\n      });\n    },\n    addComment() {\n      this.$request.post('/comment/add', {\n        content: this.commentContent,\n        fid: this.fid,\n        module: this.module\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('操作成功');\n          this.commentContent = '';\n          this.loadComment(); // 重新加载数据\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","fid","module","data","commentCount","commentContent","commentList","user","JSON","parse","localStorage","getItem","created","loadComment","methods","del","id","$confirm","type","then","response","$request","delete","res","code","$message","success","error","msg","catch","handleShowReplyInput","item","$set","showReplyInput","addReplay","post","pid","rootId","content","replyContent","get","params","addComment"],"sources":["src/components/Comment.vue"],"sourcesContent":["<template>\n  <!--  评论开始  -->\n  <div class=\"card\">\n    <h2 style=\"margin-bottom: 20px\">评论 {{ commentCount }}</h2>\n\n    <div style=\"margin-bottom: 20px\">\n      <el-input type=\"textarea\" placeholder=\"请输入评论内容\" v-model=\"commentContent\"></el-input>\n      <div style=\"text-align: right; margin-top: 5px\">\n        <el-button type=\"primary\" @click=\"addComment\">评 论</el-button>\n      </div>\n    </div>\n\n    <div>\n      <div style=\"display: flex; grid-gap: 20px; margin-bottom: 20px\" v-for=\"item in commentList\" :key=\"item.id\">\n        <img :src=\"item.avatar\" alt=\"\" style=\"width: 50px; height: 50px; border-radius: 50%\">\n        <div style=\"flex: 1\">\n          <!--                这是第一级评论-->\n          <div style=\"margin-bottom: 10px\">\n            <div style=\"color: #666; margin-bottom: 10px\">{{ item.userName }}</div>\n            <div style=\"color: #444; margin-bottom: 10px\">{{ item.content }}</div>\n            <div style=\"color: #888; font-size: 13px; margin-bottom: 10px\"><span style=\"margin-right: 20px\">{{ item.time }}</span>\n              <span style=\"cursor: pointer;\" :class=\"{ 'comment-active' : item.showReplyInput }\" @click=\"handleShowReplyInput(item)\"><i class=\"el-icon-s-comment\"></i>评论</span>\n              <span style=\"margin-left: 20px; cursor: pointer\" @click=\"del(item.id)\" v-if=\"item.userId === user.id\"><i class=\"el-icon-delete\"></i>删除</span>\n            </div>\n            <div v-if=\"item.showReplyInput\">\n              <el-input type=\"textarea\" placeholder=\"请输入回复内容\" v-model=\"item.replyContent\"></el-input>\n              <div style=\"text-align: right; margin-top: 5px\">\n                <el-button type=\"primary\" @click=\"addReplay(item)\">回 复</el-button>\n              </div>\n            </div>\n          </div>\n          <!--                这是回复-->\n          <div style=\"display: flex;  grid-gap: 20px; margin-bottom: 20px\" v-for=\"sub in item.children\" :key=\"sub.id\">\n            <img :src=\"sub.avatar\" alt=\"\" style=\"width: 50px; height: 50px; border-radius: 50%\">\n            <div style=\"flex: 1\">\n              <div style=\"color: #666; margin-bottom: 10px\">{{ sub.userName }} <span style=\"color: #333\" v-if=\"sub.replyUser !== item.userName\">回复  {{ sub.replyUser }}</span></div>\n              <div style=\"color: #444; margin-bottom: 10px\">{{ sub.content }}</div>\n              <div style=\"color: #888; font-size: 13px; margin-bottom: 10px\"><span style=\"margin-right: 20px\">{{ sub.time }}</span>\n                <span style=\"cursor: pointer;\" :class=\"{ 'comment-active' : sub.showReplyInput }\" @click=\"handleShowReplyInput(sub)\"><i class=\"el-icon-s-comment\"></i>评论</span>\n                <span style=\"margin-left: 20px; cursor: pointer\" @click=\"del(sub.id)\" v-if=\"sub.userId === user.id\"><i class=\"el-icon-delete\"></i>删除</span>\n              </div>\n              <div v-if=\"sub.showReplyInput\">\n                <el-input type=\"textarea\" placeholder=\"请输入回复内容\" v-model=\"sub.replyContent\"></el-input>\n                <div style=\"text-align: right; margin-top: 5px\">\n                  <el-button type=\"primary\" @click=\"addReplay(sub)\">回 复</el-button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--  评论结束  -->\n\n</template>\n\n<script>\nexport default {\n  name: \"CommentComponent\",\n  props: {\n    fid: null,\n    module: null\n  },\n  data() {\n    return {\n      commentCount: 0,\n      commentContent: '',\n      commentList: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    }\n  },\n  created() {\n    this.loadComment()\n  },\n  methods: {\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/comment/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.loadComment()\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleShowReplyInput(item) {\n      this.$set(item, 'showReplyInput', !item.showReplyInput)\n    },\n    addReplay(item) {\n      this.$request.post('/comment/add', { pid: item.id, rootId: item.rootId, content: item.replyContent, fid: this.fid, module: this.module }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('操作成功')\n          item.replyContent = ''\n          this.loadComment()  // 重新加载数据\n        }\n      })\n    },\n    loadComment() {\n      this.$request.get('/comment/selectForUser', {\n        params: {  fid: this.fid, module: this.module }\n      }).then(res => {\n        this.commentList = res.data || []\n      })\n\n      this.$request.get('/comment/selectCount', {\n        params: { fid: this.fid, module: this.module }\n      }).then(res => {\n        this.commentCount = res.data || 0\n      })\n    },\n    addComment() {\n      this.$request.post('/comment/add', { content: this.commentContent, fid: this.fid, module: this.module }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('操作成功')\n          this.commentContent = ''\n          this.loadComment()  // 重新加载数据\n        }\n      })\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"AA0DA;EACAA,IAAA;EACAC,KAAA;IACAC,GAAA;IACAC,MAAA;EACA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,cAAA;MACAC,WAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAC,IAAAC,EAAA;MAAA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAC,QAAA,CAAAC,MAAA,sBAAAN,EAAA,EAAAG,IAAA,CAAAI,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAb,WAAA;UACA;YACA,KAAAY,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAC,KAAA,QACA;IACA;IACAC,qBAAAC,IAAA;MACA,KAAAC,IAAA,CAAAD,IAAA,qBAAAA,IAAA,CAAAE,cAAA;IACA;IACAC,UAAAH,IAAA;MACA,KAAAV,QAAA,CAAAc,IAAA;QAAAC,GAAA,EAAAL,IAAA,CAAAf,EAAA;QAAAqB,MAAA,EAAAN,IAAA,CAAAM,MAAA;QAAAC,OAAA,EAAAP,IAAA,CAAAQ,YAAA;QAAAtC,GAAA,OAAAA,GAAA;QAAAC,MAAA,OAAAA;MAAA,GAAAiB,IAAA,CAAAI,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACAK,IAAA,CAAAQ,YAAA;UACA,KAAA1B,WAAA;QACA;MACA;IACA;;IACAA,YAAA;MACA,KAAAQ,QAAA,CAAAmB,GAAA;QACAC,MAAA;UAAAxC,GAAA,OAAAA,GAAA;UAAAC,MAAA,OAAAA;QAAA;MACA,GAAAiB,IAAA,CAAAI,GAAA;QACA,KAAAjB,WAAA,GAAAiB,GAAA,CAAApB,IAAA;MACA;MAEA,KAAAkB,QAAA,CAAAmB,GAAA;QACAC,MAAA;UAAAxC,GAAA,OAAAA,GAAA;UAAAC,MAAA,OAAAA;QAAA;MACA,GAAAiB,IAAA,CAAAI,GAAA;QACA,KAAAnB,YAAA,GAAAmB,GAAA,CAAApB,IAAA;MACA;IACA;IACAuC,WAAA;MACA,KAAArB,QAAA,CAAAc,IAAA;QAAAG,OAAA,OAAAjC,cAAA;QAAAJ,GAAA,OAAAA,GAAA;QAAAC,MAAA,OAAAA;MAAA,GAAAiB,IAAA,CAAAI,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA,KAAArB,cAAA;UACA,KAAAQ,WAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}