{"ast":null,"code":"import Identify from \"@/components/Identify\";\nexport default {\n  name: \"Login\",\n  components: {\n    Identify\n  },\n  data() {\n    return {\n      form: {\n        role: 'ADMIN'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      code: '',\n      // 表单绑定的验证码\n      // 图片验证码\n      identifyCode: '',\n      // 验证码规则\n      identifyCodes: '123456789ABCDEFGHGKMNPQRSTUVWXY'\n    };\n  },\n  mounted() {\n    this.refreshCode();\n  },\n  methods: {\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n    },\n    // 生成随机验证码\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * this.identifyCodes.length)];\n      }\n    },\n    login() {\n      if (!this.code) {\n        this.$message.warning('请输入验证码');\n        this.refreshCode();\n        return;\n      }\n      if (this.code.toLowerCase() !== this.identifyCode.toLowerCase()) {\n        this.$message.warning('验证码错误');\n        this.refreshCode();\n        return;\n      }\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n              this.$message.success('登录成功');\n              setTimeout(() => {\n                // 跳转主页\n                if (res.data.role === 'ADMIN') {\n                  location.href = '/home';\n                } else {\n                  location.href = '/front/home';\n                }\n              }, 500);\n            } else {\n              this.refreshCode();\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Identify","name","components","data","form","role","rules","username","required","message","trigger","password","code","identifyCode","identifyCodes","mounted","refreshCode","methods","makeCode","o","l","i","Math","floor","random","length","login","$message","warning","toLowerCase","$refs","validate","valid","$request","post","then","res","localStorage","setItem","JSON","stringify","success","setTimeout","location","href","error","msg"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div style=\"width: 380px; padding: 50px 30px; background-color: white; border-radius: 5px;\">\n      <div style=\"text-align: center; font-size: 24px; margin-bottom: 30px; color: #333\">博客平台</div>\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\"@keyup.enter.native=\"login\">\n        <el-form-item prop=\"username\">\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"role\">\n          <el-radio-group v-model=\"form.role\">\n            <el-radio label=\"ADMIN\">管理员</el-radio>\n            <el-radio label=\"USER\">用户</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item prop=\"code\">\n          <div style=\"display: flex\">\n            <el-input style=\"flex: 1\" size=\"medium\" v-model=\"code\"></el-input>\n            <Identify :identifyCode=\"identifyCode\" @click.native=\"refreshCode\" />\n          </div>\n        </el-form-item>\n        <el-form-item>\n          <el-button size=\"medium\" style=\"width: 100%; background-color: #2a60c9; border-color: #2a60c9; color: white\" @click=\"login\">登 录</el-button>\n        </el-form-item>\n        <div style=\"display: flex; align-items: center\">\n          <div style=\"flex: 1\"></div>\n          <div style=\"flex: 1; text-align: right\">\n            还没有账号？请 <a href=\"/register\">注册</a>\n          </div>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Identify from \"@/components/Identify\";\n\nexport default {\n  name: \"Login\",\n  components: {\n    Identify\n  },\n  data() {\n    return {\n      form: { role: 'ADMIN' },\n      rules: {\n        username: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n        ]\n      },\n      code: '',   // 表单绑定的验证码\n      // 图片验证码\n      identifyCode: '',\n      // 验证码规则\n      identifyCodes: '123456789ABCDEFGHGKMNPQRSTUVWXY',\n    }\n  },\n  mounted() {\n    this.refreshCode()\n  },\n  methods: {\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = ''\n      this.makeCode(this.identifyCodes, 4)\n    },\n    // 生成随机验证码\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * (this.identifyCodes.length))]\n      }\n    },\n    login() {\n      if (!this.code) {\n        this.$message.warning('请输入验证码')\n        this.refreshCode()\n        return\n      }\n      if (this.code.toLowerCase() !== this.identifyCode.toLowerCase()) {\n        this.$message.warning('验证码错误')\n        this.refreshCode()\n        return\n      }\n      this.$refs['formRef'].validate((valid) => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\n              this.$message.success('登录成功')\n              setTimeout(() => {\n                // 跳转主页\n                if (res.data.role === 'ADMIN') {\n                  location.href = '/home'\n                } else {\n                  location.href = '/front/home'\n                }\n              }, 500)\n            } else {\n              this.refreshCode()\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  height: 100vh;\n  overflow: hidden;\n  background-image: url(\"@/assets/imgs/bg3.jpg\");\n  background-size: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #666;\n}\na {\n  color: #2a60c9;\n}\n</style>"],"mappings":"AAsCA,OAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,IAAA;QAAAC,IAAA;MAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,IAAA;MAAA;MACA;MACAC,YAAA;MACA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA;IACAD,YAAA;MACA,KAAAH,YAAA;MACA,KAAAK,QAAA,MAAAJ,aAAA;IACA;IACA;IACAI,SAAAC,CAAA,EAAAC,CAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,EAAAC,CAAA;QACA,KAAAR,YAAA,SAAAC,aAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,UAAAV,aAAA,CAAAW,MAAA;MACA;IACA;IACAC,MAAA;MACA,UAAAd,IAAA;QACA,KAAAe,QAAA,CAAAC,OAAA;QACA,KAAAZ,WAAA;QACA;MACA;MACA,SAAAJ,IAAA,CAAAiB,WAAA,YAAAhB,YAAA,CAAAgB,WAAA;QACA,KAAAF,QAAA,CAAAC,OAAA;QACA,KAAAZ,WAAA;QACA;MACA;MACA,KAAAc,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAA9B,IAAA,EAAA+B,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAxB,IAAA;cACAyB,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAJ,GAAA,CAAAjC,IAAA;cACA,KAAAwB,QAAA,CAAAc,OAAA;cACAC,UAAA;gBACA;gBACA,IAAAN,GAAA,CAAAjC,IAAA,CAAAE,IAAA;kBACAsC,QAAA,CAAAC,IAAA;gBACA;kBACAD,QAAA,CAAAC,IAAA;gBACA;cACA;YACA;cACA,KAAA5B,WAAA;cACA,KAAAW,QAAA,CAAAkB,KAAA,CAAAT,GAAA,CAAAU,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}